{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/card\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\n\nfunction TodoAddComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Description is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let TodoAddComponent = /*#__PURE__*/(() => {\n  class TodoAddComponent {\n    constructor() {\n      this.currentMaxId = 0;\n      this.added = new EventEmitter();\n      this.todoForm = new FormGroup({\n        description: new FormControl(null, [Validators.required])\n      });\n    }\n\n    onAdd(form) {\n      var _a;\n\n      if (this.todoForm.valid && this.todoForm.dirty) {\n        this.added.emit({\n          id: this.currentMaxId + 1,\n          description: this.todoForm.value.description,\n          checked: false\n        });\n        form.resetForm();\n        this.todoForm.reset();\n        (_a = this.todoForm.get('description')) === null || _a === void 0 ? void 0 : _a.markAsUntouched();\n      }\n    }\n\n  }\n\n  TodoAddComponent.ɵfac = function TodoAddComponent_Factory(t) {\n    return new (t || TodoAddComponent)();\n  };\n\n  TodoAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TodoAddComponent,\n    selectors: [[\"app-todo-add\"]],\n    inputs: {\n      currentMaxId: \"currentMaxId\"\n    },\n    outputs: {\n      added: \"added\"\n    },\n    decls: 17,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"formGroupDirective\", \"ngForm\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"formControlName\", \"description\", \"placeholder\", \"Neues Todo hier eingeben\"], [4, \"ngIf\"], [\"color\", \"primary\", \"mat-raised-button\", \"\", \"type\", \"submit\"]],\n    template: function TodoAddComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"mat-card\")(1, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function TodoAddComponent_Template_form_ngSubmit_1_listener() {\n          i0.ɵɵrestoreView(_r2);\n\n          const _r0 = i0.ɵɵreference(2);\n\n          return ctx.onAdd(_r0);\n        });\n        i0.ɵɵelementStart(3, \"mat-card-header\")(4, \"mat-card-title\");\n        i0.ɵɵtext(5, \" Neues Todo erstellen \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"mat-card-content\")(7, \"mat-form-field\", 2)(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Todo Beschreibung\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 3);\n        i0.ɵɵelementStart(11, \"mat-hint\");\n        i0.ɵɵtext(12, \"A description is required\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, TodoAddComponent_mat_error_13_Template, 2, 0, \"mat-error\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"mat-card-actions\")(15, \"button\", 5);\n        i0.ɵɵtext(16, \"Erstellen\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        let tmp_1_0;\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.todoForm);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.todoForm.get(\"description\")) == null ? null : tmp_1_0.hasError(\"required\"));\n      }\n    },\n    directives: [i1.MatCard, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i1.MatCardHeader, i1.MatCardTitle, i1.MatCardContent, i3.MatFormField, i3.MatLabel, i4.MatInput, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i3.MatHint, i5.NgIf, i3.MatError, i1.MatCardActions, i6.MatButton],\n    styles: [\"\"]\n  });\n  return TodoAddComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}