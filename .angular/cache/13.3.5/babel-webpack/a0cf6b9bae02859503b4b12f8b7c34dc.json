{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/todo.services\";\nimport * as i2 from \"@angular/material/card\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\n\nfunction TodoAddComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Description is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let TodoAddComponent = /*#__PURE__*/(() => {\n  class TodoAddComponent {\n    constructor(todoService) {\n      this.todoService = todoService;\n      this.todoForm = new FormGroup({\n        description: new FormControl(null, [Validators.required])\n      });\n    }\n\n    onAdd(form) {\n      var _a;\n\n      if (this.todoForm.valid && this.todoForm.dirty) {\n        this.todoService.add(this.todoForm.value.description);\n        form.resetForm();\n        this.todoForm.reset();\n        (_a = this.todoForm.get('description')) === null || _a === void 0 ? void 0 : _a.markAsUntouched();\n      }\n    }\n\n  }\n\n  TodoAddComponent.ɵfac = function TodoAddComponent_Factory(t) {\n    return new (t || TodoAddComponent)(i0.ɵɵdirectiveInject(i1.TodoService));\n  };\n\n  TodoAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TodoAddComponent,\n    selectors: [[\"app-todo-add\"]],\n    decls: 17,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"formGroupDirective\", \"ngForm\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"formControlName\", \"description\", \"placeholder\", \"Neues Todo hier eingeben\"], [4, \"ngIf\"], [\"color\", \"primary\", \"mat-raised-button\", \"\", \"type\", \"submit\"]],\n    template: function TodoAddComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"mat-card\")(1, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function TodoAddComponent_Template_form_ngSubmit_1_listener() {\n          i0.ɵɵrestoreView(_r2);\n\n          const _r0 = i0.ɵɵreference(2);\n\n          return ctx.onAdd(_r0);\n        });\n        i0.ɵɵelementStart(3, \"mat-card-header\")(4, \"mat-card-title\");\n        i0.ɵɵtext(5, \" Neues Todo erstellen \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"mat-card-content\")(7, \"mat-form-field\", 2)(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Todo Beschreibung\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 3);\n        i0.ɵɵelementStart(11, \"mat-hint\");\n        i0.ɵɵtext(12, \"A description is required\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, TodoAddComponent_mat_error_13_Template, 2, 0, \"mat-error\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"mat-card-actions\")(15, \"button\", 5);\n        i0.ɵɵtext(16, \"Erstellen\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        let tmp_1_0;\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.todoForm);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.todoForm.get(\"description\")) == null ? null : tmp_1_0.hasError(\"required\"));\n      }\n    },\n    directives: [i2.MatCard, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i2.MatCardHeader, i2.MatCardTitle, i2.MatCardContent, i4.MatFormField, i4.MatLabel, i5.MatInput, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i4.MatHint, i6.NgIf, i4.MatError, i2.MatCardActions, i7.MatButton],\n    styles: [\"\"]\n  });\n  return TodoAddComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}